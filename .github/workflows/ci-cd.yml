name: CI/CD Pipeline - Full Infrastructure

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 182061027050.dkr.ecr.us-east-1.amazonaws.com
  ECS_CLUSTER: my-voting-app

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create ECS Cluster
        run: |
          aws ecs create-cluster --cluster-name $ECS_CLUSTER || echo "Cluster already exists"

  build-and-deploy:
    needs: infrastructure
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        include:
          - service: vote
            repo: voting-app
            ecs_service: voting-app-service
          - service: worker
            repo: worker-app
            ecs_service: worker-app-service
          - service: result
            repo: result-app
            ecs_service: result-app-service

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd ${{ matrix.service }}
          docker build -t $ECR_REGISTRY/${{ matrix.repo }}:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/${{ matrix.repo }}:latest .
          docker push $ECR_REGISTRY/${{ matrix.repo }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ matrix.repo }}:latest

      - name: Deploy to ECS
        run: |
          echo "Service deployment will be handled manually for now"
          echo "Image pushed: $ECR_REGISTRY/${{ matrix.repo }}:${{ github.sha }}"
